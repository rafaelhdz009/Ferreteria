/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package DisVtnP;

import cjb.ci.*;
import datos.FerreteriaDAO;
import domain.*;
import java.util.*;

/**
 *
 * @author Rafael
 */
public class VtnNota extends javax.swing.JFrame {

    FerreteriaDAO ferrD = new FerreteriaDAO();
    int prod_idP, vend_idV, cliente_id, idVenta = -1, cantidadP = -1;
    String prod_producto;
    String cliente_rfc;
    double monto;

    List<ProductoVenta> listPV = new ArrayList<>();

    /**
     * Creates new form VtnFactura
     */
    public VtnNota() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGis = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnConfirmarN = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        panelBlanco = new javax.swing.JPanel();
        etqFactura = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAVta = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDteVn = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        etqDetV = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        etqDetV1 = new javax.swing.JLabel();
        etqCveVend = new javax.swing.JLabel();
        etqProd = new javax.swing.JLabel();
        comboBoxProd = new javax.swing.JComboBox<>();
        txtDescuento = new javax.swing.JTextField();
        cbDescuento = new javax.swing.JCheckBox();
        comboBoxVend = new javax.swing.JComboBox<>();
        txtCantP = new javax.swing.JTextField();
        etqCantP1 = new javax.swing.JLabel();
        madera = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nota");
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelGis.setBackground(new java.awt.Color(0, 51, 51));
        panelGis.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAgregar.setBackground(new java.awt.Color(51, 153, 0));
        btnAgregar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        btnAgregar.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregar.setText("Agregar");
        btnAgregar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAgregar.setEnabled(false);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        btnAgregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAgregarKeyPressed(evt);
            }
        });
        panelGis.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 340, -1, -1));

        btnCancelar.setBackground(new java.awt.Color(255, 51, 51));
        btnCancelar.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panelGis.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 350, -1, -1));

        btnConfirmarN.setBackground(new java.awt.Color(51, 153, 0));
        btnConfirmarN.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        btnConfirmarN.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmarN.setText("Confirmar");
        btnConfirmarN.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnConfirmarN.setEnabled(false);
        btnConfirmarN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarNActionPerformed(evt);
            }
        });
        btnConfirmarN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConfirmarNKeyPressed(evt);
            }
        });
        panelGis.add(btnConfirmarN, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelBlanco.setBackground(new java.awt.Color(255, 255, 255));
        panelBlanco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelBlanco.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etqFactura.setFont(new java.awt.Font("Broadway", 0, 36)); // NOI18N
        etqFactura.setForeground(new java.awt.Color(0, 0, 0));
        etqFactura.setText("Nota");
        panelBlanco.add(etqFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, 31));

        jPanel1.add(panelBlanco, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, -10, 210, 60));

        txtAVta.setEditable(false);
        txtAVta.setColumns(20);
        txtAVta.setRows(5);
        jScrollPane2.setViewportView(txtAVta);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 380, 210));

        txtDteVn.setEditable(false);
        txtDteVn.setColumns(20);
        txtDteVn.setRows(5);
        jScrollPane3.setViewportView(txtDteVn);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, 340, 210));

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        etqDetV.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        etqDetV.setForeground(new java.awt.Color(255, 255, 255));
        etqDetV.setText("Venta:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(etqDetV)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etqDetV)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 80, 50));

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));

        etqDetV1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        etqDetV1.setForeground(new java.awt.Color(255, 255, 255));
        etqDetV1.setText("Detalle de venta:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etqDetV1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(etqDetV1)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, 140, 50));

        etqCveVend.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        etqCveVend.setForeground(new java.awt.Color(0, 0, 0));
        etqCveVend.setText("Clave del vendedor: ");
        jPanel1.add(etqCveVend, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        etqProd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        etqProd.setForeground(new java.awt.Color(0, 0, 0));
        etqProd.setText("Producto:");
        jPanel1.add(etqProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        comboBoxProd.setBackground(new java.awt.Color(255, 255, 255));
        comboBoxProd.setForeground(new java.awt.Color(0, 0, 0));
        comboBoxProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione productos" }));
        comboBoxProd.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        comboBoxProd.setEnabled(false);
        comboBoxProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxProdActionPerformed(evt);
            }
        });
        jPanel1.add(comboBoxProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 170, 20));

        txtDescuento.setEnabled(false);
        txtDescuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescuentoKeyTyped(evt);
            }
        });
        jPanel1.add(txtDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 100, -1));

        cbDescuento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbDescuento.setForeground(new java.awt.Color(0, 0, 0));
        cbDescuento.setText("Descuento");
        cbDescuento.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbDescuentoActionPerformed(evt);
            }
        });
        jPanel1.add(cbDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        comboBoxVend.setBackground(new java.awt.Color(255, 255, 255));
        comboBoxVend.setForeground(new java.awt.Color(0, 0, 0));
        comboBoxVend.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el vendedor" }));
        comboBoxVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxVendActionPerformed(evt);
            }
        });
        jPanel1.add(comboBoxVend, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 180, -1));

        txtCantP.setEnabled(false);
        txtCantP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantPKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantPKeyTyped(evt);
            }
        });
        jPanel1.add(txtCantP, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 80, -1));

        etqCantP1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        etqCantP1.setForeground(new java.awt.Color(0, 0, 0));
        etqCantP1.setText("Cantidad:");
        jPanel1.add(etqCantP1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, -1, -1));

        madera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/maderaBlanca.jpg"))); // NOI18N
        madera.setText("jLabel1");
        jPanel1.add(madera, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1050, 410));

        panelGis.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 1020, 380));

        getContentPane().add(panelGis, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, -3, 1060, 420));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAgregarActionPerformed
    {//GEN-HEADEREND:event_btnAgregarActionPerformed
        try {
            int cant = this.cantidadP == -1 ? this.ferrD.cantidadP(this.prod_idP) : this.cantidadP;
            if (Integer.parseInt(txtCantP.getText()) <= 0 || Integer.parseInt(txtCantP.getText()) > cant) {
                Mensaje.error(this, "No puede ser menor o igual a 0, o la petición excede las existencias.");
                CtrlInterfaz.cambia(txtCantP);
            } else {
                this.prod_producto = String.valueOf(this.comboBoxProd.getSelectedItem());
                Productos p = this.ferrD.listaPWhere(this.prod_producto);
                this.prod_idP = p.getIdP();
                if (this.idVenta == -1) {
                    this.idVenta = generaNumVent();
                }
                boolean b = validaProd();
                int cantidadT;
                int cantTxt = Integer.parseInt(this.txtCantP.getText());

                if (!b) {
                    listPV.add(new ProductoVenta(this.prod_idP, this.idVenta, Integer.parseInt(txtCantP.getText())));
                } else {
                    for (ProductoVenta pv : listPV) {
                        if (this.prod_idP == pv.getIdProd()) {
                            cantidadT = cantTxt + pv.getCantidad();
                            pv.setCantidad(cantidadT);
                            break;
                        }
                    }
                }

                double mont = p.getPrecio();
                this.monto += (mont * Integer.parseInt(txtCantP.getText()));
                String s = txtDteVn.getText() + "Producto: " + p.getNombre() + "\nPrecio: "
                        + mont + "\nCantidad: " + txtCantP.getText()
                        + "\n------------------------------------\n";
                txtDteVn.setText(s);
                CtrlInterfaz.limpia(txtCantP);
                CtrlInterfaz.cambia(btnConfirmarN);
                CtrlInterfaz.habilita(false, btnAgregar, comboBoxVend);
                CtrlInterfaz.habilita(true, btnConfirmarN);
                comboBoxProd.setSelectedIndex(0);
            }
        } catch (Exception e) {
            Mensaje.error(this, "Verifique los datos, no esta seleccionando producto o no esta llenando el campo de cantidad");
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private boolean validaProd() {
        boolean b = false;
        if (!listPV.isEmpty()) {
            for (ProductoVenta pv : listPV) {
                if (this.prod_idP == pv.getIdProd()) {
                    b = true;
                    break;
                } else {
                    b = false;
                }
            }
        }
        return b;
    }

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelarActionPerformed
    {//GEN-HEADEREND:event_btnCancelarActionPerformed
        CtrlInterfaz.limpia(txtDescuento, txtCantP, btnAgregar, btnConfirmarN, txtDteVn, txtAVta);
        CtrlInterfaz.habilita(false, txtDescuento, txtCantP, btnAgregar, btnConfirmarN);
        CtrlInterfaz.habilita(true, comboBoxVend);
        cbDescuento.setSelected(false);
        this.comboBoxVend.setSelectedIndex(0);
        this.comboBoxProd.setSelectedIndex(0);
        this.cantidadP = -1;
        this.idVenta = -1;
        this.monto = 0;
        listPV.clear();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtCantPKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtCantPKeyTyped
    {//GEN-HEADEREND:event_txtCantPKeyTyped
        Validaciones.validaEntero(evt, 6, txtCantP.getText());
    }//GEN-LAST:event_txtCantPKeyTyped

    private void txtCantPKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtCantPKeyPressed
    {//GEN-HEADEREND:event_txtCantPKeyPressed
        try {
            if (evt.getKeyChar() == '\n') {
                if (Integer.parseInt(txtCantP.getText()) <= 0) {
                    Mensaje.error(this, "La cantidad de productos no pueden ser cero");
                    CtrlInterfaz.cambia(txtCantP);
                } else {
                    Validaciones.enterEntero(this, evt, txtCantP, btnAgregar);
                }
            }

        } catch (Exception e) {
            Validaciones.enter(this, evt, txtCantP, txtCantP, "Capo vacío");
        }
    }//GEN-LAST:event_txtCantPKeyPressed

    private void btnConfirmarNActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnConfirmarNActionPerformed
    {//GEN-HEADEREND:event_btnConfirmarNActionPerformed
        if (Mensaje.pregunta(this, "Desea Confirmar la venta?") == 0) {
            int desc = -1;
            boolean b = true;
            if (txtDescuento.getText() == null || txtDescuento.isEnabled() == false) {
                desc = 0;
                b = true;
            } else {
                if (txtDescuento.getText().equals("")) {
                    Mensaje.error(this, "No ha llenado el campo descuento.");
                    b = false;
                } else if (Integer.parseInt(txtDescuento.getText()) > 100
                        || Integer.parseInt(txtDescuento.getText()) <= 0) {
                    Mensaje.error(this, "El descuento no puede ser mayor a 100 o menor o igual a 0");
                    b = false;
                } else {
                    desc = Integer.parseInt(txtDescuento.getText());
                    b = true;
                }
            }
            if (b) {
                double descuento = calcDesc(monto, desc);
                double total = monto - descuento;
                this.ferrD.insertVent(idVenta, monto, total, Integer.parseInt(String.valueOf(comboBoxVend.getSelectedItem())));
                int cantidadAct;
                for (ProductoVenta pv : this.listPV) {
                    this.ferrD.insertProductoVen(pv.getIdProd(), pv.getIdVenta(), pv.getCantidad());
                    cantidadAct = this.ferrD.listaCantidadP(pv.getIdProd()) - pv.getCantidad();
                    this.ferrD.actualizarPcant(cantidadAct, pv.getIdProd());
                }
                this.ferrD.insertNota(generaNumNot(), desc, this.idVenta, 0);
                Mensaje.exito(this, "Venta realizada con exito!");
                btnCancelarActionPerformed(evt);
            }
        } else {
            Mensaje.error(this, "Operacion cancelada");
            btnCancelarActionPerformed(evt);
        }
    }//GEN-LAST:event_btnConfirmarNActionPerformed

    private void btnAgregarKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_btnAgregarKeyPressed
    {//GEN-HEADEREND:event_btnAgregarKeyPressed
        if (evt.getKeyChar() == '\n') {
            btnAgregarActionPerformed(null);
        }

    }//GEN-LAST:event_btnAgregarKeyPressed

    private void txtDescuentoKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtDescuentoKeyPressed
    {//GEN-HEADEREND:event_txtDescuentoKeyPressed
        try {
            if (evt.getKeyChar() == '\n') {
                if (Double.parseDouble(txtDescuento.getText()) <= 0 || Double.parseDouble(txtDescuento.getText()) >= 100) {
                    Mensaje.error(this, "El descuento no pueden ser cero o mayor al total");
                    CtrlInterfaz.cambia(txtDescuento);
                } else {
                    Validaciones.enterFlotante(this, evt, txtDescuento, txtCantP);
                }
            }
        } catch (Exception e) {
            Validaciones.enter(this, evt, txtDescuento, txtDescuento, "Capo vacío");
        }
    }//GEN-LAST:event_txtDescuentoKeyPressed

    private void txtDescuentoKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_txtDescuentoKeyTyped
    {//GEN-HEADEREND:event_txtDescuentoKeyTyped
        Validaciones.validaEntero(evt, 3, txtDescuento.getText());
    }//GEN-LAST:event_txtDescuentoKeyTyped

    private void cbDescuentoActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cbDescuentoActionPerformed
    {//GEN-HEADEREND:event_cbDescuentoActionPerformed
        if (cbDescuento.isSelected()) {
            cbDescuento.setSelected(rootPaneCheckingEnabled);
            CtrlInterfaz.habilita(true, txtDescuento);
        } else {
            CtrlInterfaz.habilita(false, txtDescuento);
        }
    }//GEN-LAST:event_cbDescuentoActionPerformed

    private void btnConfirmarNKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_btnConfirmarNKeyPressed
    {//GEN-HEADEREND:event_btnConfirmarNKeyPressed
        if (evt.getKeyChar() == '\n') {
            btnConfirmarNActionPerformed(null);
        }
    }//GEN-LAST:event_btnConfirmarNKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowOpened
    {//GEN-HEADEREND:event_formWindowOpened
        try {
            llenaComboVend();
            llenaComboProd();
        } catch (Exception e) {
            Mensaje.error(this, "Aún no hay registros");
            dispose();
        }
    }//GEN-LAST:event_formWindowOpened

    private void comboBoxProdActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_comboBoxProdActionPerformed
    {//GEN-HEADEREND:event_comboBoxProdActionPerformed
        try {
            if (this.comboBoxProd.getSelectedIndex() != 0) {
                String desp = this.vendedorDesp() + this.productoDesp();
                txtAVta.setText(desp);
                CtrlInterfaz.habilita(true, txtCantP);
                CtrlInterfaz.cambia(this.txtCantP);
            } else {
                CtrlInterfaz.limpia(txtCantP);
                CtrlInterfaz.habilita(false, txtCantP, btnAgregar);
                this.comboBoxVendActionPerformed(evt);
            }
        } catch (Exception e) {
            //e.printStackTrace(System.out);
        }
    }//GEN-LAST:event_comboBoxProdActionPerformed

    private void comboBoxVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxVendActionPerformed
        try {
            if (this.comboBoxVend.getSelectedIndex() != 0) {
                this.comboBoxProd.setSelectedIndex(0);
                txtAVta.setText(vendedorDesp());
                CtrlInterfaz.habilita(true, this.comboBoxProd);
                CtrlInterfaz.cambia(this.comboBoxProd);
            } else {
                CtrlInterfaz.limpia(txtCantP, txtAVta);
                CtrlInterfaz.habilita(false, comboBoxProd, txtCantP, btnAgregar);
                this.comboBoxProd.setSelectedIndex(0);
            }
        } catch (Exception e) {
//            e.printStackTrace(System.out);
        }
    }//GEN-LAST:event_comboBoxVendActionPerformed

    private String vendedorDesp() {
        this.vend_idV = Integer.parseInt(String.valueOf(this.comboBoxVend.getSelectedItem()));
        Vendedor v = this.ferrD.listaVendWhere(this.vend_idV);
        return v.desp();
    }

    private String productoDesp() {
        this.prod_producto = String.valueOf(this.comboBoxProd.getSelectedItem());
        Productos p = this.ferrD.listaPWhere(this.prod_producto);
        this.prod_idP = p.getIdP();
        int cantidadT;
        if (!listPV.isEmpty()) {
            for (ProductoVenta pv : listPV) {
                if (this.prod_idP == pv.getIdProd()) {
                    cantidadT = p.getCantidad() - pv.getCantidad();
                    this.cantidadP = cantidadT;
                    p.setCantidad(cantidadT);
                    break;
                }
            }
        }
        return p.toString();
    }

    public void llenaComboProd() {
        List<String> arr = ferrD.listaProductos();
        for (String productos : arr) {
            this.comboBoxProd.addItem(String.valueOf(productos));
        }
    }

    public void llenaComboVend() {
        List<Integer> arr = ferrD.listaVendId();
        for (int idVend : arr) {
            this.comboBoxVend.addItem(String.valueOf(idVend));
        }
    }

    private int generaNumNot() {
        boolean b = false;
        int numF = 0;
        while (!b) {
            int num = (int) (Math.random() * 10000);
            String uno = "2" + num;
            numF = Integer.parseInt(uno);
            int idFactNota = this.ferrD.listaFacturaNotaWhereID(numF);
            b = idFactNota == 0 ? true : false;
        }
        return numF;
    }

    private int generaNumVent() {
        boolean b = false;
        int numF = 0;
        while (!b) {
            int num = (int) (Math.random() * 10000);
            String uno = "3" + num;
            numF = Integer.parseInt(uno);
            int idVendedor = this.ferrD.listaVendWhereID(numF);
            b = idVendedor == 0 ? true : false;
        }
        return numF;
    }

    public double calcDesc(double total, double descuento) {
        double desc;
        desc = total * (descuento / 100);
        return desc;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VtnNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VtnNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VtnNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VtnNota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VtnNota().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmarN;
    private javax.swing.JCheckBox cbDescuento;
    private javax.swing.JComboBox<String> comboBoxProd;
    private javax.swing.JComboBox<String> comboBoxVend;
    private javax.swing.JLabel etqCantP1;
    private javax.swing.JLabel etqCveVend;
    private javax.swing.JLabel etqDetV;
    private javax.swing.JLabel etqDetV1;
    private javax.swing.JLabel etqFactura;
    private javax.swing.JLabel etqProd;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel madera;
    private javax.swing.JPanel panelBlanco;
    private javax.swing.JPanel panelGis;
    private javax.swing.JTextArea txtAVta;
    private javax.swing.JTextField txtCantP;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextArea txtDteVn;
    // End of variables declaration//GEN-END:variables
}
